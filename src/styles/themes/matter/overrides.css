/**
 * Component Styles
 */
:where(:root),
:host,
.wa-theme-matter {
  button,
  input:where([type='button'], [type='reset'], [type='submit']),
  wa-button,
  wa-radio-group > wa-radio-button,
  .wa-button {
    --wa-form-control-border-radius: var(--wa-border-radius-pill);

    box-shadow: 0 0 transparent;
    transition-property: all;

    &:not([appearance~='plain'], .wa-plain) {
      padding-inline: calc(var(--wa-space) * 1.5);
    }

    &:not([appearance~='outlined'], [appearance~='plain'], .wa-outlined, .wa-plain):hover {
      box-shadow: var(--wa-shadow-s);
    }

    &:is([appearance~='outlined'], .wa-outlined) {
      --border-color: var(--wa-form-control-border-color);
    }
  }

  input[type='checkbox'],
  wa-checkbox,
  wa-tree-item::part(checkbox__control) {
    --border-radius: calc(var(--wa-border-radius-s) / 2);
  }

  wa-icon-button::part(base) {
    aspect-ratio: 1;
    border-radius: var(--wa-border-radius-circle);
    padding: 0.75em;
  }

  input:where(
      :not(
        [type='button'],
        [type='checkbox'],
        [type='color'],
        [type='file'],
        [type='hidden'],
        [type='image'],
        [type='radio'],
        [type='range'],
        [type='reset'],
        [type='submit']
      )
    ),
  select,
  textarea,
  wa-input,
  wa-select,
  wa-textarea,
  .wa-text-field {
    --wa-form-control-value-line-height: var(--wa-line-height-normal);

    &:is([appearance~='filled'], .wa-filled):not([appearance~='outlined'], .wa-outlined, [pill], .wa-pill) {
      --wa-focus-ring: ;
      --border-color: transparent transparent var(--wa-form-control-border-color) transparent;

      &:where(input, textarea, wa-input, select, wa-textarea, .wa-text-field):focus,
      &:where(wa-select):focus-within {
        --border-color: transparent transparent var(--wa-color-focus) transparent;
        --box-shadow: inset 0 calc(var(--wa-form-control-border-width) * -2) 0 0 var(--wa-color-focus);
      }

      &:where(input, select, textarea, .wa-text-field),
      &::part(input),
      &::part(combobox) {
        border-radius: var(--wa-form-control-border-radius) var(--wa-form-control-border-radius) 0px 0px;
      }
    }
  }

  wa-menu-item,
  wa-option {
    --background-color-hover: color-mix(in oklch, var(--wa-color-surface-lowered), transparent);
    --text-color-hover: var(--wa-color-text-normal);
    &::part(base) {
      line-height: var(--wa-line-height-expanded);
    }
  }

  progress,
  wa-progress-bar {
    height: 0.25rem;

    &:where(progress),
    &::part(base) {
      border-radius: var(--wa-border-radius-square);
    }
  }

  input:is([type='checkbox'], [type='radio']),
  wa-checkbox,
  wa-tree-item::part(checkbox__control),
  wa-radio {
    --border-width: var(--wa-border-width-m);
    --checked-icon-scale: 0.65;

    &::part(control) {
      margin-inline-end: 0.75em;
    }

    &:hover {
      --box-shadow: 0 0 0 0.5em color-mix(in oklab, var(--border-color), transparent 85%);
      &:is(:checked, :indeterminate, :state(checked), :state(indeterminate)) {
        --box-shadow: 0 0 0 0.5em color-mix(in oklab, var(--border-color-checked), transparent 85%);
      }
    }
  }

  input[type='range']:hover,
  wa-slider:hover {
    --thumb-shadow: 0 0 0 0.5em color-mix(in oklab, var(--thumb-color), transparent 85%);
  }

  wa-switch {
    --background-color: var(--wa-color-surface-raised);
    --border-width: var(--wa-border-width-m);
    --height: 2em;
    --width: calc(var(--height) * 1.625);
    --thumb-size: 1.5em;
    transition-property: all;

    &::part(control) {
      margin-inline-end: 0.75em;
    }

    &:hover {
      --thumb-shadow: 0 0 0 0.5em color-mix(in oklab, var(--border-color), transparent 85%);
    }

    &:not(:state(checked))::part(thumb) {
      transform: scale(0.7);
    }

    &:active::part(thumb) {
      transform: scale(1.1);
    }
  }

  wa-tag {
    font-weight: var(--wa-font-weight-semibold);
  }
}
