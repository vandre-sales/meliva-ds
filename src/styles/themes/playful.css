@import url('../color/rudimentary.css');
@import url('default/color.css');
@import url('default/space.css');
@import url('default/outlines.css');
@import url('default/typography.css');
@import url('default/rounding.css');
@import url('default/shadows.css');
@import url('default/transitions.css');
@import url('default/groups.css');
@import url('https://fonts.googleapis.com/css2?family=Azeret+Mono:ital@0;1&family=Fredoka:wght@300..700&family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap');

:where(:root),
:host,
.wa-theme-playful,
.wa-light,
.wa-dark .wa-invert {
  color-scheme: light;
  color: var(--wa-color-text-normal);

  /**
   * Foundational Colors
   */
  --wa-color-surface-border: var(--wa-color-gray-80);

  --wa-color-text-link: var(--wa-color-yellow-40);

  --wa-color-focus: var(--wa-color-violet-60);

  /**
   * Semantic Colors
   */
  --wa-color-brand-fill-quiet: var(--wa-color-violet-90);
  --wa-color-brand-fill-normal: var(--wa-color-violet-80);
  --wa-color-brand-fill-loud: var(--wa-color-violet-50);
  --wa-color-brand-border-quiet: var(--wa-color-violet-90);
  --wa-color-brand-border-normal: var(--wa-color-violet-70);
  --wa-color-brand-border-loud: var(--wa-color-violet-50);
  --wa-color-brand-on-quiet: var(--wa-color-violet-30);
  --wa-color-brand-on-normal: var(--wa-color-violet-30);
  --wa-color-brand-on-loud: white;

  --wa-color-success-fill-quiet: var(--wa-color-green-90);
  --wa-color-success-fill-normal: var(--wa-color-green-80);
  --wa-color-success-fill-loud: var(--wa-color-green-50);
  --wa-color-success-border-quiet: var(--wa-color-green-90);
  --wa-color-success-border-normal: var(--wa-color-green-70);
  --wa-color-success-border-loud: var(--wa-color-green-50);
  --wa-color-success-on-quiet: var(--wa-color-green-30);
  --wa-color-success-on-normal: var(--wa-color-green-30);
  --wa-color-success-on-loud: white;

  --wa-color-warning-fill-quiet: var(--wa-color-yellow-90);
  --wa-color-warning-fill-normal: var(--wa-color-yellow-80);
  --wa-color-warning-fill-loud: var(--wa-color-yellow-50);
  --wa-color-warning-border-quiet: var(--wa-color-yellow-90);
  --wa-color-warning-border-normal: var(--wa-color-yellow-70);
  --wa-color-warning-border-loud: var(--wa-color-yellow-50);
  --wa-color-warning-on-quiet: var(--wa-color-yellow-30);
  --wa-color-warning-on-normal: var(--wa-color-yellow-30);
  --wa-color-warning-on-loud: white;

  --wa-color-danger-fill-quiet: var(--wa-color-red-90);
  --wa-color-danger-fill-normal: var(--wa-color-red-80);
  --wa-color-danger-fill-loud: var(--wa-color-red-50);
  --wa-color-danger-border-quiet: var(--wa-color-red-90);
  --wa-color-danger-border-normal: var(--wa-color-red-70);
  --wa-color-danger-border-loud: var(--wa-color-red-50);
  --wa-color-danger-on-quiet: var(--wa-color-red-30);
  --wa-color-danger-on-normal: var(--wa-color-red-30);
  --wa-color-danger-on-loud: white;

  --wa-color-neutral-fill-quiet: var(--wa-color-gray-90);
  --wa-color-neutral-fill-normal: var(--wa-color-gray-80);
  --wa-color-neutral-fill-loud: var(--wa-color-gray-40);
  --wa-color-neutral-border-quiet: var(--wa-color-gray-90);
  --wa-color-neutral-border-normal: var(--wa-color-gray-70);
  --wa-color-neutral-border-loud: var(--wa-color-gray-50);
  --wa-color-neutral-on-quiet: var(--wa-color-gray-30);
  --wa-color-neutral-on-normal: var(--wa-color-gray-30);
  --wa-color-neutral-on-loud: var(--wa-color-gray-95);

  /**
   * Typography
   */
  --wa-font-family-body: 'Nunito', sans-serif;
  --wa-font-family-heading: 'Fredoka', sans-serif;
  --wa-font-family-code: 'Azeret Mono', monospace;
  --wa-font-family-longform: ui-serif, serif;

  --wa-font-size-scale: 1.125;

  --wa-font-weight-normal: 500;
  --wa-font-weight-semibold: 600;
  --wa-font-weight-bold: 700;

  --wa-font-weight-heading: var(--wa-font-weight-semibold);

  --wa-line-height-condensed: 1.35;
  --wa-line-height-normal: 1.8;
  --wa-line-height-expanded: 2.25;

  --wa-link-decoration-default: underline color-mix(in oklab, currentColor 60%, transparent) dashed;

  /**
   * Borders
   */
  --wa-border-width-scale: 3;

  /**
   * Focus
   */
  --wa-focus-ring-width: 0.25rem;

  /**
   * Rounding
   */
  --wa-border-radius-scale: 2;

  /**
   * Shadows
   */
  --wa-shadow-blur-scale: 3;
  --wa-shadow-offset-y-scale: 2;

  /**
   * Component Groups
   */
  --wa-form-control-border-color: var(--wa-color-neutral-border-normal);
  --wa-form-control-border-radius: min(var(--wa-border-radius-pill), calc(var(--wa-form-control-height) * 0.6));
}

.wa-dark,
.wa-invert,
:is(:host-context(.wa-dark)) {
  color-scheme: dark;
  color: var(--wa-color-text-normal);

  /**
   * Foundational Colors
   */
  --wa-color-surface-raised: var(--wa-color-gray-20);
  --wa-color-surface-default: var(--wa-color-gray-10);
  --wa-color-surface-lowered: var(--wa-color-gray-05);
  --wa-color-surface-border: var(--wa-color-gray-20);

  --wa-color-text-normal: var(--wa-color-gray-95);
  --wa-color-text-quiet: var(--wa-color-gray-60);
  --wa-color-text-link: var(--wa-color-yellow-80);

  --wa-color-focus: var(--wa-color-violet-60);

  --wa-color-mix-hover: white 10%;

  /**
   * Semantic Colors
   */
  --wa-color-brand-fill-quiet: var(--wa-color-violet-20);
  --wa-color-brand-fill-normal: var(--wa-color-violet-40);
  --wa-color-brand-fill-loud: var(--wa-color-violet-50);
  --wa-color-brand-border-quiet: var(--wa-color-violet-30);
  --wa-color-brand-border-normal: var(--wa-color-violet-40);
  --wa-color-brand-border-loud: var(--wa-color-violet-50);
  --wa-color-brand-on-quiet: var(--wa-color-violet-70);
  --wa-color-brand-on-normal: var(--wa-color-violet-90);
  --wa-color-brand-on-loud: white;

  --wa-color-success-fill-quiet: var(--wa-color-green-20);
  --wa-color-success-fill-normal: var(--wa-color-green-40);
  --wa-color-success-fill-loud: var(--wa-color-green-50);
  --wa-color-success-border-quiet: var(--wa-color-green-30);
  --wa-color-success-border-normal: var(--wa-color-green-40);
  --wa-color-success-border-loud: var(--wa-color-green-50);
  --wa-color-success-on-quiet: var(--wa-color-green-70);
  --wa-color-success-on-normal: var(--wa-color-green-90);
  --wa-color-success-on-loud: white;

  --wa-color-warning-fill-quiet: var(--wa-color-yellow-20);
  --wa-color-warning-fill-normal: var(--wa-color-yellow-40);
  --wa-color-warning-fill-loud: var(--wa-color-yellow-50);
  --wa-color-warning-border-quiet: var(--wa-color-yellow-30);
  --wa-color-warning-border-normal: var(--wa-color-yellow-40);
  --wa-color-warning-border-loud: var(--wa-color-yellow-50);
  --wa-color-warning-on-quiet: var(--wa-color-yellow-70);
  --wa-color-warning-on-normal: var(--wa-color-yellow-90);
  --wa-color-warning-on-loud: white;

  --wa-color-danger-fill-quiet: var(--wa-color-red-20);
  --wa-color-danger-fill-normal: var(--wa-color-red-40);
  --wa-color-danger-fill-loud: var(--wa-color-red-50);
  --wa-color-danger-border-quiet: var(--wa-color-red-30);
  --wa-color-danger-border-normal: var(--wa-color-red-40);
  --wa-color-danger-border-loud: var(--wa-color-red-50);
  --wa-color-danger-on-quiet: var(--wa-color-red-70);
  --wa-color-danger-on-normal: var(--wa-color-red-90);
  --wa-color-danger-on-loud: white;

  --wa-color-neutral-fill-quiet: var(--wa-color-gray-20);
  --wa-color-neutral-fill-normal: var(--wa-color-gray-40);
  --wa-color-neutral-fill-loud: var(--wa-color-gray-70);
  --wa-color-neutral-border-quiet: var(--wa-color-gray-30);
  --wa-color-neutral-border-normal: var(--wa-color-gray-40);
  --wa-color-neutral-border-loud: var(--wa-color-gray-50);
  --wa-color-neutral-on-quiet: var(--wa-color-gray-70);
  --wa-color-neutral-on-normal: var(--wa-color-gray-90);
  --wa-color-neutral-on-loud: var(--wa-color-gray-05);
}

/**
 * Component Styles
 */
:where(:root),
:host,
.wa-theme-playful {
  wa-badge {
    font-weight: var(--wa-font-weight-bold);
  }

  wa-badge,
  wa-tag,
  wa-select::part(tag) {
    border-width: calc(var(--wa-border-width-s) * 0.67);
  }
  wa-select::part(tag) {
    border-radius: var(--wa-form-control-border-radius);
  }

  button,
  input:where([type='button'], [type='reset'], [type='submit']),
  wa-button,
  wa-radio-group > wa-radio-button,
  .wa-button {
    font-weight: var(--wa-font-weight-bold);

    &:not([disabled]) {
      transition-property: all;

      /* Doesn't apply transform to buttons in dropdowns or button groups.
       * For dropdowns, this prevents the dropdown panel from shifting. */
      &:not(:where(wa-button-group &, wa-dropdown &, wa-radio-group &)) {
        &:hover {
          transform: scale(1.02, 1.02);
        }

        &:active {
          transform: scale(0.98, 0.98);
        }
      }
    }

    &:not(
        wa-radio-button,
        [appearance~='outlined'],
        [appearance~='filled'],
        [appearance~='plain'],
        .wa-outlined,
        .wa-filled,
        .wa-plain
      ) {
      --gradient-top: oklch(from var(--background-color) calc(l - 0.1) c h);
      --gradient-middle: var(--background-color);
      --gradient-bottom: oklch(from var(--background-color) calc(l + 0.1) c h);
      --shadow-outer: 0px 0.375em 1em
        color-mix(in oklch, oklch(from var(--background-color) calc(l + 0.1) c h), transparent 70%);
      --shadow-lower: inset 0 -0.125em 0.5em oklch(from var(--background-color) calc(l - 0.2) c h);
      --shadow-upper: inset 0 0.125em 0.5em oklch(from var(--background-color) calc(l + 0.4) c h);
      text-shadow: 0 0.125em 0.125em oklch(from var(--background-color) calc(l - 0.1) c h);

      &::part(base),
      :is(&) {
        background: linear-gradient(
          180deg,
          var(--gradient-top) 0%,
          var(--gradient-middle) 51.88%,
          var(--gradient-bottom) 100%
        );
        box-shadow: var(--shadow-outer), var(--shadow-lower), var(--shadow-upper);
        padding-inline: calc(var(--wa-space) + var(--border-width));
        border-width: 0px;
      }

      &:not([disabled]) {
        &:hover {
          &::part(base),
          :is(&) {
            background: linear-gradient(
              180deg,
              var(--gradient-bottom) 0%,
              var(--gradient-middle) 51.88%,
              var(--gradient-top) 100%
            );
          }
        }

        &:active {
          &::part(base),
          :is(&) {
            background: linear-gradient(
              180deg,
              color-mix(in oklab, var(--gradient-top), var(--wa-color-mix-active)) 0%,
              color-mix(in oklab, var(--gradient-middle), var(--wa-color-mix-active)) 51.88%,
              color-mix(in oklab, var(--gradient-bottom), var(--wa-color-mix-active)) 100%
            );
            box-shadow:
              0 0 transparent,
              var(--shadow-lower),
              var(--shadow-upper);
          }
        }
      }
    }
  }

  input:is([type='checkbox'], [type='radio']):is(:checked, :indeterminate),
  wa-checkbox:is(:state(checked), :state(indeterminate))::part(control),
  wa-radio:state(checked)::part(control),
  wa-switch:state(checked)::part(control) {
    --gradient-top: oklch(from var(--background-color-checked) calc(l - 0.1) c h);
    --gradient-middle: var(--background-color-checked);
    --gradient-bottom: oklch(from var(--background-color-checked) calc(l + 0.1) c h);

    background: linear-gradient(
      180deg,
      var(--gradient-top) 0%,
      var(--gradient-middle) 51.88%,
      var(--gradient-bottom) 100%
    );
  }

  input[type='range'],
  wa-progress-bar,
  wa-slider {
    --shadow-lower: inset 0 -0.125em 0.5em
      oklch(from var(--indicator-color, var(--wa-form-control-activated-color)) calc(l - 0.2) c h);
    --shadow-upper: inset 0 0.125em 0.5em
      oklch(from var(--indicator-color, var(--wa-form-control-activated-color)) calc(l + 0.4) c h);

    --thumb-shadow: var(--wa-shadow-s), var(--shadow-lower), var(--shadow-upper);

    &::part(indicator) {
      box-shadow: var(--shadow-lower), var(--shadow-upper);
    }
  }

  input[type='radio'],
  wa-radio {
    --background-color-checked: var(--wa-form-control-activated-color);
    --checked-icon-color: var(--wa-color-surface-default);
    --checked-icon-scale: 0.5;
  }

  wa-rating {
    --symbol-color: color-mix(in oklab, var(--symbol-color-active), transparent);
  }

  wa-switch[checked] {
    --thumb-shadow: var(--wa-shadow-s);
  }
}
