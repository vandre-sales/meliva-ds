.button-group {
  display: inline-flex;
  position: relative;
  isolation: isolate;
  gap: 1px;

  > :hover,
  &::slotted(:hover) {
    z-index: 1;
  }

  /* Focus and checked are always on top */
  > :focus,
  &::slotted(:focus),
  > [aria-checked='true'],
  &::slotted([aria-checked='true']),
  > [checked],
  &::slotted([checked]) {
    z-index: 2 !important;
  }
}

/* Horizontal */
.button-group[aria-orientation='horizontal'] {
  /* TODO - see https://github.com/shoelace-style/webawesome/issues/374 */
  align-items: end;
}

.button-group:not([aria-orientation='vertical']):not(.button-group-vertical) {
  > :not(:first-child),
  &::slotted(:not(:first-child)) {
    border-start-start-radius: 0 !important;
    border-end-start-radius: 0 !important;
    --wa-border-inline-start-radius: 0;
  }

  > :not(:last-child),
  &::slotted(:not(:last-child)) {
    border-start-end-radius: 0 !important;
    border-end-end-radius: 0 !important;
    --wa-border-inline-end-radius: 0;
  }
}

/* Vertical */
.button-group[aria-orientation='vertical'],
.button-group-vertical {
  flex-direction: column;

  > :not(:first-child),
  &::slotted(:not(:first-child)) {
    --wa-border-block-start-radius: 0;
    border-start-start-radius: 0 !important;
    border-start-end-radius: 0 !important;
  }

  > :not(:last-child),
  &::slotted(:not(:last-child)) {
    --wa-border-block-end-radius: 0;
    border-end-start-radius: 0 !important;
    border-end-end-radius: 0 !important;
  }
}

/* Button groups with at least one outlined button will not have a gap and instead have borders overlap */
.button-group.has-outlined {
  gap: 0;

  &:not([aria-orientation='vertical']):not(.button-group-vertical)::slotted(:not(:first-child)) {
    margin-inline-start: calc(-1 * var(--border-width));
  }
  &:is([aria-orientation='vertical'], .button-group-vertical)::slotted(:not(:first-child)) {
    margin-block-start: calc(-1 * var(--border-width));
  }
}
